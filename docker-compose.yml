services:
  # Redis service for NestJS Pub/Sub
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data


  # NestJS Pub/Sub Service
  pubsub-service:
    build:
      context: ./services/pub-sub
      dockerfile: Dockerfile
    ports:
      - "3001:3001" # Expose HTTP port to host
    depends_on: # Ensure Redis starts before this service
      - cache
    environment:
      REDIS_HOST: cache
    networks:
      - microservice-network

  # NestJS Private DB Read/Write Service
  write-read-db-service:
    build:
      context: ./services/write-read-db
      dockerfile: Dockerfile
    ports:
      - "3002:3002" # Expose HTTP port to host
    networks:
      - microservice-network

  # NestJS (TypeScript) Target Service
  target-service:
    build:
      context: ./services/target
      dockerfile: Dockerfile
    # No es necesario, ya que acceden internamente, pero iwal
    ports:
       - "3004:3004"
    networks:
      - microservice-network

  # NestJS (TypeScript) Ambassador Service
  ambassador-service:
    build:
      context: ./services/ambassador
      dockerfile: Dockerfile
    ports:
      - "3003:3003" 
    depends_on: 
      - target-service
    environment:
      TARGET_SERVICE_URL: http://localhost:3004
    networks:
      - microservice-network

# Define a custom network for all services to communicate on
networks:
  microservice-network:
    driver: bridge

volumes:
  cache:
    driver: local