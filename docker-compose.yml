services:

  # NestJS Pub/Sub Service
  pubsub-service:
    build:
      context: ./services/pub-sub
      dockerfile: Dockerfile
    ports:
      - "3001:3001" # Expose HTTP port to host
    expose:
      - "3005" 
    environment:

      PUB_SUB_PORT: 3001
      WS_PORT: 3005
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - microservice-network

  # NestJS Private DB Read/Write Service
  write-read-db-service:
    build:
      context: ./services/write-read-db
      dockerfile: Dockerfile
    ports:
      - "3002:3002" # Expose HTTP port to host
    networks:
      - microservice-network

  # NestJS (TypeScript) Target Service
  target-service:
    build:
      context: ./services/target
      dockerfile: Dockerfile
    # No es necesario, ya que acceden internamente, pero iwal
    ports:
       - "3004:3004"
    networks:
      - microservice-network

  # NestJS (TypeScript) Ambassador Service
  ambassador-service:
    build:
      context: ./services/ambassador
      dockerfile: Dockerfile
    ports:
      - "3003:3003" 
    depends_on: 
      - target-service
    environment:
      TARGET_SERVICE_URL: http://localhost:3004
    networks:
      - microservice-network

# Define a custom network for all services to communicate on
networks:
  microservice-network:
    driver: bridge

volumes:
  cache:
    driver: local