# .github/workflows/ci-cd.yml
name: Monorepo CI/CD

on:
  push:
    branches: #Branch que mira
      - main
    paths:
      - "services/**" 
  pull_request:
    branches:
      - main
    paths:
      - "services/**"

jobs:
  build-and-push-pub-sub:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push NestJS Pub/Sub Service Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./services/pub-sub
          file: ./services/pub-sub/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/pub-sub:latest
            ${{ secrets.DOCKER_USERNAME }}/pub-sub:${{ github.sha }}
          build-args: |
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}
            REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}

  build-and-push-write-read-db:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push NestJS DB Service Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./services/write-read-db
          file: ./services/write-read-db/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/write-read-db:latest
            ${{ secrets.DOCKER_USERNAME }}/write-read-db:${{ github.sha }}

  build-and-push-ambassador:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push TypeScript Ambassador Service Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./services/ambassador
          file: ./services/ambassador/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/ambassador:latest
            ${{ secrets.DOCKER_USERNAME }}/ambassador:${{ github.sha }}
          build-args: |
            JWT_SECRET=${{ secrets.JWT_SECRET }}

  build-and-push-target:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push TypeScript Target Service Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./services/target
          file: ./services/target/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/target:latest
            ${{ secrets.DOCKER_USERNAME }}/target:${{ github.sha }}
          build-args: |
            JWT_SECRET: ${{ secrets.JWT_SECRET }} 

  deploy:
    runs-on: self-hosted
    needs: 
      - build-and-push-pub-sub
      - build-and-push-write-read-db
      - build-and-push-ambassador
      - build-and-push-target
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub for deployment
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      - name: Pull and Deploy Docker Compose Services
        working-directory: . 
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          TARGET_SERVICE_URL: http://localhost:3004
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
        run: |
          echo "Stopping existing services..."
          docker compose down --remove-orphans || true # '|| true' prevents failure if no services are running
          echo "Pulling latest images..."
          docker compose pull
          echo "Starting new services..."
          docker compose up -d
          echo "Deployment complete!"
